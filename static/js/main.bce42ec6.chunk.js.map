{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactListItem/ContactListItem.module.css","Components/Filter/Filter.module.css","Components/ContactList/ContactList.module.css","App.module.css","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactListItem/ContactListItem.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Components/Section/Section.jsx","Composables/LocalStorageApi/LocalStorageApi.js","App.js","index.js"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","s","form","this","autoComplete","type","onChange","required","button","Component","ContactListItem","id","onDelete","contactItem","onClick","ContactList","contacts","map","Filter","label","filter","Section","title","children","loadLocalStorage","key","serializedState","localStorage","getItem","undefined","JSON","parse","error","console","log","saveLocalStorage","stringify","setItem","App","addNewContact","submitData","newContact","nanoid","preventSimilar","alert","deleteContact","contactID","handleFilter","eve","filteredList","normalizedQuery","toLowerCase","includes","newContactName","normalizedName","find","storaged","prevProps","prevState","nextContacts","showFiltered","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bce42ec6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1XGGK\",\"button\":\"ContactForm_button__3Ak0Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__2ssIf\",\"button\":\"ContactListItem_button__285We\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1tDlJ\",\"label\":\"Filter_label__1lATx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__2I51l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2064z\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from 'Components/ContactForm/ContactForm.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: '', number: '' };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n        <h3>Did you already find a new friend?^^</h3>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from 'Components/ContactList/ContactListItem/ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, number, id, onDelete }) => {\r\n  return (\r\n    <li className={s.contactItem}>\r\n      {name}: {number}\r\n      <button className={s.button} type=\"button\" onClick={() => onDelete(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import PropTypes from 'prop-types';\r\nimport ContactListItem from 'Components/ContactList/ContactListItem/ContactListItem';\r\nimport s from 'Components/ContactList/ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <ul className={s.contacts}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <ContactListItem\r\n          name={name}\r\n          number={number}\r\n          id={id}\r\n          onDelete={onDelete}\r\n          key={id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport s from 'Components/Filter/Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.filter}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","function loadLocalStorage(key) {\r\n  try {\r\n    const serializedState = localStorage.getItem(key);\r\n    return serializedState === null ? undefined : JSON.parse(serializedState);\r\n  } catch (error) {\r\n    console.log('Get state error', error);\r\n  }\r\n}\r\n\r\nfunction saveLocalStorage(key, value) {\r\n  try {\r\n    const serializedState = JSON.stringify(value);\r\n    localStorage.setItem(key, serializedState);\r\n  } catch (error) {\r\n    console.log('Set state error', error);\r\n  }\r\n}\r\n\r\nexport { loadLocalStorage, saveLocalStorage };\r\n","import React, { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport ContactForm from 'Components/ContactForm/ContactForm';\r\nimport ContactList from 'Components/ContactList/ContactList';\r\nimport Filter from 'Components/Filter/Filter';\r\nimport Section from 'Components/Section/Section';\r\nimport s from './App.module.css';\r\nimport { loadLocalStorage, saveLocalStorage } from 'Composables/LocalStorageApi';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const storaged = loadLocalStorage('contacts');\r\n\r\n    if (storaged) {\r\n      this.setState(({ contacts }) => ({ contacts: [...storaged] }));\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const nextContacts = this.state.contacts;\r\n    const prevContacts = prevState.contacts;\r\n\r\n    if (nextContacts !== prevContacts) {\r\n      saveLocalStorage('contacts', nextContacts);\r\n    }\r\n  }\r\n\r\n  addNewContact = submitData => {\r\n    const { name, number } = submitData;\r\n\r\n    const newContact = {\r\n      name,\r\n      number,\r\n      id: nanoid(),\r\n    };\r\n\r\n    if (this.preventSimilar(name)) {\r\n      alert(`${name} is already in contacts^^`);\r\n    } else {\r\n      this.setState(({ contacts }) => ({\r\n        contacts: [newContact, ...contacts],\r\n      }));\r\n      const contacts = loadLocalStorage('contacts');\r\n      const localContacts = contacts ? [newContact, ...contacts] : [newContact];\r\n      saveLocalStorage('contacts', localContacts);\r\n    }\r\n  };\r\n\r\n  deleteContact = contactID => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter(({ id }) => id !== contactID),\r\n    }));\r\n  };\r\n\r\n  handleFilter = eve => {\r\n    this.setState({ filter: eve.currentTarget.value });\r\n  };\r\n\r\n  filteredList = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedQuery = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedQuery),\r\n    );\r\n  };\r\n\r\n  preventSimilar = newContactName => {\r\n    const { contacts } = this.state;\r\n    const normalizedName = newContactName.toLowerCase();\r\n\r\n    return contacts.find(({ name }) => name.toLowerCase().includes(normalizedName));\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const showFiltered = this.filteredList();\r\n\r\n    return (\r\n      <div className={s.App}>\r\n        <Section title=\"Phonebook\">\r\n          <ContactForm onSubmit={this.addNewContact} />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          <Filter value={filter} onChange={this.handleFilter} />\r\n          <ContactList\r\n            contacts={filter ? showFiltered : contacts}\r\n            onDelete={this.deleteContact}\r\n          />\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}